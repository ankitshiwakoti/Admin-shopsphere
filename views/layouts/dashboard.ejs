<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= typeof title !== 'undefined' ? title : 'ShopSphere Admin' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="/styles/main.css" rel="stylesheet">
    <link href="/styles/product-list.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/6.8.2/tinymce.min.js"></script>

    <style>
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
        }
        .toast {
            min-width: 250px;
            background-color: white;
            border-radius: 4px;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            margin-bottom: 10px;
        }
        .toast-header {
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }
        .toast-body {
            padding: 0.75rem;
        }
        .toast.success {
            background-color: #198754 !important;
        }
        .toast.error {
            background-color: #dc3545 !important;
        }
        .toast.warning {
            background-color: #ffc107 !important;
        }
        .toast.info {
            background-color: #0dcaf0 !important;
        }
        .sidebar {
            box-shadow: 4px 0 10px rgba(0, 0, 0, 0.1);
        }
        .navbar {
            height: 64px;
            padding: 0 24px;
            background: white;
            border-bottom: 1px solid #f0f0f0;
        }
        .btn-link {
            color: var(--color-primary);
            text-decoration: none;
            padding: 0.5rem;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }
        .btn-link:hover {
            background-color: rgba(var(--color-primary-rgb), 0.1);
            color: var(--color-primary);
        }
        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f3f4f6;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--color-primary);
            font-size: 1.25rem;
        }
        .dropdown-menu {
            width: 280px;
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 0;
            margin-top: 8px;
        }
        .dropdown-header {
            padding: 16px;
            border-bottom: 1px solid #f0f0f0;
        }
        .dropdown-header .user-info {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }
        .dropdown-header .user-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            margin-right: 12px;
            background: #f3f4f6;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        .dropdown-header .user-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .dropdown-header .user-avatar .status-indicator {
            width: 12px;
            height: 12px;
            background: #22c55e;
            border: 2px solid white;
            border-radius: 50%;
            position: absolute;
            bottom: 0;
            right: 0;
        }
        .dropdown-header .user-details {
            flex: 1;
        }
        .dropdown-header .user-name {
            font-size: 14px;
            font-weight: 500;
            color: #1f2937;
            margin: 0;
        }
        .dropdown-header .user-email {
            font-size: 14px;
            color: #6b7280;
            margin: 0;
        }
        .dropdown-menu .menu-section {
            padding: 8px;
        }
        .dropdown-menu .menu-item {
            display: flex;
            align-items: center;
            padding: 8px 16px;
            color: #1f2937;
            text-decoration: none;
            border-radius: 6px;
            transition: all 0.2s;
        }
        .dropdown-menu .menu-item:hover {
            background-color: #f3f4f6;
        }
        .dropdown-menu .menu-item i {
            width: 20px;
            height: 20px;
            margin-right: 12px;
            color: #6b7280;
            font-size: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .dropdown-menu .menu-item span {
            font-size: 14px;
            font-weight: 400;
        }
        .dropdown-menu .menu-divider {
            height: 1px;
            background-color: #f0f0f0;
            margin: 8px 0;
        }
        .dropdown-menu .logout-button {
            color: #ef4444;
        }
        .dropdown-menu .logout-button:hover {
            background-color: #fef2f2;
        }
        .dropdown-menu .logout-button i {
            color: #ef4444;
        }
        .navbar-search {
            position: relative;
            width: 320px;
        }
        .navbar-search .form-control {
            height: 40px;
            padding: 8px 12px 8px 36px;
            border-radius: 6px;
            border: none;
            background-color: #f5f5f5;
            font-size: 14px;
            color: #1f2937;
        }
        .navbar-search .form-control::placeholder {
            color: #6b7280;
        }
        .navbar-search .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #6b7280;
            font-size: 16px;
        }
        .navbar .nav-link {
            width: 40px;
            height: 40px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            color: #6b7280;
            transition: all 0.2s;
        }
        .navbar .nav-link:hover {
            background-color: #f5f5f5;
            color: #1f2937;
        }
        .navbar .nav-link .badge {
            position: absolute;
            top: 4px;
            right: 4px;
            min-width: 18px;
            height: 18px;
            padding: 0 5px;
            border-radius: 9px;
            background-color: #ef4444;
            color: white;
            font-size: 11px;
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .navbar .nav-item {
            margin-left: 8px;
        }
        .language-selector {
            display: flex;
            align-items: center;
            padding: 0.5rem 0.75rem;
            border-radius: 8px;
            background-color: #f3f4f6;
            color: #374151;
            font-size: 0.875rem;
            transition: all 0.2s;
        }
        .language-selector:hover {
            background-color: #e5e7eb;
        }
        .language-selector img {
            width: 20px;
            height: 20px;
            margin-right: 0.5rem;
        }
        .dropdown-item.text-danger:hover {
            background-color: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }
        .dropdown-divider {
            margin: 0.5rem 0;
        }
            /* Remove blue border on focus for navbar links and buttons */
            .navbar .nav-link:focus,
            .navbar .dropdown-toggle:focus,
            .navbar button:focus {
                outline: none;
                box-shadow: none;
            }
        @media (max-width: 768px) {
            .navbar {
                padding: 0 1rem;
            }
        }
        /* Team Selector */
        .team-selector {
            display: flex;
            align-items: center;
            padding: 6px 12px;
            background: transparent;
            border: none;
            border-radius: 6px;
            color: #1f2937;
            font-size: 14px;
            font-weight: 500;
            transition: background-color 0.2s;
        }
        .team-selector:hover {
            background-color: #f5f5f5;
        }
        .team-selector .team-avatar {
            width: 24px;
            height: 24px;
            border-radius: 6px;
            margin-right: 8px;
            background: #6366f1;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 12px;
        }
        .team-selector .badge {
            padding: 2px 8px;
            border-radius: 4px;
            background-color: #f3f4f6;
            color: #6b7280;
            font-size: 12px;
            font-weight: 500;
            margin-left: 8px;
        }
        /* User Profile */
        .user-profile {
            display: flex;
            align-items: center;
            padding: 6px;
            border-radius: 6px;
            transition: background-color 0.2s;
            margin-left: 8px;
        }
        .user-profile:hover {
            background-color: #f5f5f5;
        }
        .avatar-circle {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background-color: #f3f4f6;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6b7280;
        }
        /* Divider */
        .navbar-divider {
            width: 1px;
            height: 24px;
            background-color: #f0f0f0;
            margin: 0 8px;
        }
        /* Notification Dropdown Styles */
        .notification-dropdown {
            width: 380px !important;
            padding: 0 !important;
        }

        .notification-header {
            padding: 16px 20px;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .notification-header h6 {
            font-size: 16px;
            font-weight: 500;
            color: #1f2937;
            margin: 0;
        }

        .notification-header .settings-button {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            color: #6b7280;
            transition: all 0.2s;
            border: none;
            background: transparent;
        }

        .notification-header .settings-button:hover {
            background-color: #f3f4f6;
            color: #1f2937;
        }

        .notification-tabs {
            display: flex;
            padding: 8px;
            gap: 8px;
            border-bottom: 1px solid #f0f0f0;
        }

        .notification-tab {
            flex: 1;
            padding: 8px;
            border: none;
            background: transparent;
            border-radius: 6px;
            font-size: 14px;
            color: #6b7280;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 6px;
            transition: all 0.2s;
        }

        .notification-tab:hover {
            background-color: #f3f4f6;
        }

        .notification-tab.active {
            background-color: #f3f4f6;
            color: #1f2937;
            font-weight: 500;
        }

        .notification-tab .badge {
            padding: 2px 8px;
            border-radius: 6px;
            background-color: #e5e7eb;
            color: #6b7280;
            font-size: 12px;
            font-weight: 500;
        }

        .notification-tab.active .badge {
            background-color: #1f2937;
            color: white;
        }

        .notification-list {
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-item {
            padding: 16px 20px;
            display: flex;
            align-items: flex-start;
            gap: 12px;
            border-bottom: 1px solid #f0f0f0;
            transition: all 0.2s;
            text-decoration: none;
            color: inherit;
        }

        .notification-item:hover {
            background-color: #f9fafb;
        }

        .notification-item .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            overflow: hidden;
        }

        .notification-item .avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .notification-content {
            flex: 1;
        }

        .notification-text {
            font-size: 14px;
            color: #1f2937;
            margin-bottom: 4px;
        }

        .notification-text strong {
            font-weight: 500;
        }

        .notification-meta {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 12px;
            color: #6b7280;
        }

        .notification-meta .dot {
            width: 4px;
            height: 4px;
            border-radius: 50%;
            background-color: #d1d5db;
        }

        .notification-actions {
            display: flex;
            gap: 8px;
            margin-top: 12px;
        }

        .notification-button {
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            border: none;
            cursor: pointer;
            transition: all 0.2s;
        }

        .notification-button.primary {
            background-color: #1f2937;
            color: white;
        }

        .notification-button.secondary {
            background-color: #f3f4f6;
            color: #1f2937;
        }

        .notification-button:hover {
            opacity: 0.9;
        }

        .notification-footer {
            padding: 12px;
            text-align: center;
            border-top: 1px solid #f0f0f0;
        }

        .notification-footer a {
            color: #6b7280;
            font-size: 14px;
            text-decoration: none;
            transition: all 0.2s;
        }

        .notification-footer a:hover {
            color: #1f2937;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="sidebar-header">
                <img src="/images/logo-white.svg" alt="ShopSphere Logo" class="img-fluid">
            </div>
            <div class="sidebar-nav">
                <div class="nav-section">
                    <div class="nav-header">Main Items</div>
                    <a href="/admin/dashboard" class="nav-link <%= path === '/admin/dashboard' ? 'active' : '' %>">
                        <i class="bi bi-speedometer2"></i>
                        <span>Dashboard</span>
                    </a>
                    <a href="/admin/orders" class="nav-link <%= path === '/admin/orders' ? 'active' : '' %>">
                        <i class="bi bi-cart"></i>
                        <span>Orders</span>
                    </a>
                </div>

                <div class="nav-divider"></div>

                <div class="nav-section">
                    <div class="nav-header">Management</div>
                    <a href="#managementSubmenu" class="nav-link" data-bs-toggle="collapse">
                        <i class="bi bi-box"></i>
                        <span>Management</span>
                        <i class="bi bi-chevron-down ms-auto"></i>
                    </a>
                    <div class="collapse <%= path.startsWith('/admin/products') || path.startsWith('/admin/categories') ? 'show' : '' %>" id="managementSubmenu">
                        <a href="/admin/products/manage" class="nav-link <%= path === '/admin/products/manage' ? 'active' : '' %>">
                            <i class="bi bi-box"></i>
                            <span>Product Management</span>
                        </a>
                        <a href="/admin/categories/manage" class="nav-link <%= path.startsWith('/admin/categories/manage') ? 'active' : '' %>">
                            <i class="bi bi-tags"></i>
                            <span>Category Management</span>
                        </a>
                        <a href="/admin/products" class="nav-link <%= path.startsWith('/admin/products') ? 'active' : '' %>">
                            <i class="bi bi-box"></i>
                            <span>Products</span>
                        </a>
                       
                    </div>
                </div>

                <div class="nav-divider"></div>

                <div class="nav-section">
                    <div class="nav-header">Administration</div>
                    <a href="#adminSubmenu" class="nav-link <%= path.startsWith('/admin/admins') || path.startsWith('/admin/roles') || path.startsWith('/admin/customers') ? 'active' : '' %>" data-bs-toggle="collapse">
                        <i class="bi bi-people"></i>
                        <span>Administration</span>
                        <i class="bi bi-chevron-down ms-auto"></i>
                    </a>
                    <div class="collapse <%= path.startsWith('/admin/admins') || path.startsWith('/admin/roles') || path.startsWith('/admin/customers') ? 'show' : '' %>" id="adminSubmenu">
                        <a href="/admin/admins" class="nav-link <%= path === '/admin/admins' ? 'active' : '' %>">
                            <i class="bi bi-people"></i>
                            <span>Admins</span>
                        </a>
                        <a href="/admin/roles" class="nav-link <%= path === '/admin/roles' ? 'active' : '' %>">
                            <i class="bi bi-person-badge"></i>
                            <span>Roles</span>
                        </a>
                        <a href="/admin/customers" class="nav-link <%= path === '/admin/customers' ? 'active' : '' %>">
                            <i class="bi bi-person-lines-fill"></i>
                            <span>Customers</span>
                        </a>
                    </div>
                </div>

                <div class="nav-divider"></div>

                <div class="nav-section">
                    <a href="/admin/logout" class="nav-link <%= path === '/admin/logout' ? 'active' : '' %>">
                        <i class="bi bi-box-arrow-right"></i>
                        <span>Logout</span>
                    </a>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Top Navbar -->
            <nav class="navbar navbar-expand-lg navbar-light">
                <div class="container-fluid">
                    <!-- Sidebar Toggle -->
                    <button class="btn btn-link d-md-none p-0 me-3" id="sidebarToggle">
                        <i class="bi bi-list"></i>
                    </button>

                    <!-- Left side of navbar -->
                    <div class="d-flex align-items-center">
                        <!-- Add any left-side elements here if needed -->
                    </div>

                    <!-- Right Navigation - Moved to the right side with ms-auto -->
                    <ul class="navbar-nav ms-auto align-items-center">
                        <!-- Keyboard Shortcuts -->
                       

                       

                        <!-- Notifications -->
                        <li class="nav-item dropdown">
                            <a href="#" class="nav-link position-relative" data-bs-toggle="dropdown" id="notificationDropdown">
                                <i class="bi bi-bell"></i>
                                <span class="badge" id="notificationBadge"><%= locals.notifications && notifications.unreadCount > 0 ? notifications.unreadCount : '' %></span>
                            </a>
                            <div class="dropdown-menu notification-dropdown dropdown-menu-end">
                                <div class="notification-header">
                                    <h6>Notifications</h6>
                                    <button class="settings-button" id="markAllReadBtn">
                                        <i class="bi bi-check-all"></i>
                                    </button>
                                </div>
                                <div class="notification-tabs">
                                    <button class="notification-tab active" data-tab="all">
                                        All <span class="badge" id="allCount"><%= locals.notifications && notifications.total ? notifications.total : 0 %></span>
                                    </button>
                                    <button class="notification-tab" data-tab="unread">
                                        Unread <span class="badge" id="unreadCount"><%= locals.notifications && notifications.unreadCount ? notifications.unreadCount : 0 %></span>
                                    </button>
                                </div>
                                <div class="notification-list" id="notificationList">
                                    <% if (locals.notifications && notifications.notifications && notifications.notifications.length > 0) { %>
                                        <% notifications.notifications.forEach(notification => { %>
                                            <div class="notification-item <%= !notification.readBy.some(read => read.admin._id.toString() === locals.admin._id.toString()) ? 'unread' : '' %>" 
                                                 data-id="<%= notification._id %>"
                                                 data-link="<%= notification.link || '#' %>">
                                                <div class="avatar">
                                                    <img src="/images/default-avatar.svg" alt="<%= notification.createdBy.username %>">
                                                </div>
                                                <div class="notification-content">
                                                    <p class="notification-text">
                                                        <strong><%= notification.title %></strong>
                                                        <%= notification.message %>
                                                    </p>
                                                    <div class="notification-meta">
                                                        <span><%= new Date(notification.createdAt).toLocaleString() %></span>
                                                        <span class="dot"></span>
                                                        <span>By <%= notification.createdBy.username %></span>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    <% } else { %>
                                        <div class="notification-item">
                                            <div class="notification-content text-center py-3">
                                                <p class="notification-text">No notifications</p>
                                            </div>
                                        </div>
                                    <% } %>
                                </div>
                                <div class="notification-footer">
                                    <a href="/admin/notifications" id="viewAllNotifications">View all</a>
                                </div>
                            </div>
                        </li>

                        <!-- Settings -->
                       

                        <!-- User Profile -->
                        <li class="nav-item dropdown">
                            <button class="user-profile" type="button" id="userDropdown" data-bs-toggle="dropdown">
                                <div class="avatar-circle">
                                    <i class="bi bi-person"></i>
                                </div>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" id="userDropdownMenu">
                                <div class="dropdown-header">
                                    <div class="user-info">
                                        <div class="user-avatar">
                                            <img src="/images/default-avatar.svg" alt="User Avatar">
                                            <div class="status-indicator"></div>
                                        </div>
                                        <div class="user-details">
                                            <h6 class="user-name"><%= typeof admin !== 'undefined' ? admin.username : 'Admin User' %></h6>
                                            <p class="user-email"><%= typeof admin !== 'undefined' ? admin.email : 'admin@example.com' %></p>
                                        </div>
                                    </div>
                                </div>
                                <div class="menu-section">
                                    <a href="/admin/home" class="menu-item">
                                        <i class="bi bi-house"></i>
                                        <span>Home</span>
                                    </a>
                                    <a href="/admin/profile" class="menu-item">
                                        <i class="bi bi-person"></i>
                                        <span>Profile</span>
                                    </a>
                                    <a href="/admin/projects" class="menu-item">
                                        <i class="bi bi-folder"></i>
                                        <span>Projects</span>
                                    </a>
                                    <a href="/admin/subscription" class="menu-item">
                                        <i class="bi bi-credit-card"></i>
                                        <span>Subscription</span>
                                    </a>
                                    <a href="/admin/security" class="menu-item">
                                        <i class="bi bi-shield-lock"></i>
                                        <span>Security</span>
                                    </a>
                                    <a href="/admin/settings" class="menu-item">
                                        <i class="bi bi-gear"></i>
                                        <span>Account settings</span>
                                    </a>
                                    <div class="menu-divider"></div>
                                    <a href="/admin/logout" class="menu-item logout-button">
                                        <i class="bi bi-box-arrow-right"></i>
                                        <span>Logout</span>
                                    </a>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- Page Content -->
            <div class="content-wrapper">
                <%- body %>
            </div>
        </div>
    </div>

    <!-- Toast Container -->
    <div class="toast-container">
        <% if(locals.success_msg && success_msg.length > 0) { %>
            <div class="toast success align-items-center text-white border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <%= success_msg %>
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        <% } %>
        <% if(locals.error_msg && error_msg.length > 0) { %>
            <div class="toast error align-items-center text-white border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <%= error_msg %>
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        <% } %>
        <% if(locals.error && error.length > 0) { %>
            <div class="toast error align-items-center text-white border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <%= error %>
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle sidebar on mobile
            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebar = document.querySelector('.sidebar');
            const mainContent = document.querySelector('.main-content');

            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', function() {
                    sidebar.classList.toggle('active');
                    mainContent.classList.toggle('expanded');
                });
            }

            // Close sidebar when clicking outside on mobile
            document.addEventListener('click', function(event) {
                if (window.innerWidth < 768) {
                    if (!sidebar.contains(event.target) && !sidebarToggle.contains(event.target)) {
                        sidebar.classList.remove('active');
                        mainContent.classList.remove('expanded');
                    }
                }
            });

            // Initialize and show toasts
            const toastElList = document.querySelectorAll('.toast');
            const toastList = [...toastElList].map(toastEl => new bootstrap.Toast(toastEl, {
                autohide: true,
                delay: 3000
            }));
            toastList.forEach(toast => toast.show());

            // Notification functionality
            const notificationDropdown = document.getElementById('notificationDropdown');
            const notificationList = document.getElementById('notificationList');
            const markAllReadBtn = document.getElementById('markAllReadBtn');
            const notificationTabs = document.querySelectorAll('.notification-tab');
            const notificationItems = document.querySelectorAll('.notification-item[data-id]');
            const notificationBadge = document.getElementById('notificationBadge');
            const allCountBadge = document.getElementById('allCount');
            const unreadCountBadge = document.getElementById('unreadCount');
            const viewAllNotifications = document.getElementById('viewAllNotifications');

            // Handle notification item click
            if (notificationItems.length > 0) {
                notificationItems.forEach(item => {
                    item.addEventListener('click', function() {
                        const notificationId = this.dataset.id;
                        const link = this.dataset.link;
                        
                        // Mark as read
                        fetch(`/admin/notifications/${notificationId}/read`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Remove unread class
                                this.classList.remove('unread');
                                
                                // Update unread count
                                const currentUnreadCount = parseInt(unreadCountBadge.textContent);
                                if (currentUnreadCount > 0) {
                                    unreadCountBadge.textContent = currentUnreadCount - 1;
                                    
                                    // Update badge
                                    const currentBadgeCount = parseInt(notificationBadge.textContent);
                                    if (currentBadgeCount > 0) {
                                        if (currentBadgeCount === 1) {
                                            notificationBadge.textContent = '';
                                        } else {
                                            notificationBadge.textContent = currentBadgeCount - 1;
                                        }
                                    }
                                }
                                
                                // Navigate to the link
                                if (link && link !== '#') {
                                    window.location.href = link;
                                }
                            }
                        })
                        .catch(error => console.error('Error marking notification as read:', error));
                    });
                });
            }

            // Handle mark all as read
            if (markAllReadBtn) {
                markAllReadBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    fetch('/admin/notifications/read-all', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Remove unread class from all notifications
                            document.querySelectorAll('.notification-item.unread').forEach(item => {
                                item.classList.remove('unread');
                            });
                            
                            // Update unread count
                            unreadCountBadge.textContent = '0';
                            
                            // Update badge
                            notificationBadge.textContent = '';
                        }
                    })
                    .catch(error => console.error('Error marking all notifications as read:', error));
                });
            }

            // Handle notification tabs
            if (notificationTabs.length > 0) {
                notificationTabs.forEach(tab => {
                    tab.addEventListener('click', function() {
                        // Remove active class from all tabs
                        notificationTabs.forEach(t => t.classList.remove('active'));
                        
                        // Add active class to clicked tab
                        this.classList.add('active');
                        
                        const tabType = this.dataset.tab;
                        
                        // Show/hide notifications based on tab
                        if (tabType === 'all') {
                            document.querySelectorAll('.notification-item').forEach(item => {
                                item.style.display = '';
                            });
                        } else if (tabType === 'unread') {
                            document.querySelectorAll('.notification-item').forEach(item => {
                                item.style.display = item.classList.contains('unread') ? '' : 'none';
                            });
                        }
                    });
                });
            }

            // Handle view all notifications
            if (viewAllNotifications) {
                viewAllNotifications.addEventListener('click', function(e) {
                    e.preventDefault();
                    window.location.href = '/admin/notifications';
                });
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
    const chevronIcon = document.getElementById('chevronIcon');  // Chevron icon
    const dropdownMenu = document.getElementById('userDropdownMenu'); // Dropdown menu

    // Check if both elements are available in the DOM
    if (chevronIcon && dropdownMenu) {
        // Add click event listener to the chevron icon
        chevronIcon.addEventListener('click', function () {
            // Toggle chevron icon between down and up
            if (chevronIcon.classList.contains('fa-chevron-down')) {
                // Change icon to up and show the dropdown menu
                chevronIcon.classList.remove('fa-chevron-down');
                chevronIcon.classList.add('fa-chevron-up');
                dropdownMenu.classList.add('show');  // Show dropdown
            } else {
                // Change icon to down and hide the dropdown menu
                chevronIcon.classList.remove('fa-chevron-up');
                chevronIcon.classList.add('fa-chevron-down');
                dropdownMenu.classList.remove('show');  // Hide dropdown
            }
        });
    }
});
    </script>
</body>
</html> 