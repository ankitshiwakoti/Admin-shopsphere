<%- contentFor('body') %>

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Category Management</h1>
        <button class="btn btn-primary btn-shadow" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
            <i class="fas fa-plus me-2"></i>Add Category
        </button>
    </div>

    <!-- Category List Table -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Slug</th>
                            <th>Parent</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (typeof categories !== 'undefined' && categories) { %>
                            <% categories.forEach(category => { %>
                                <tr>
                                    <td><%= category.name %></td>
                                    <td><%= category.slug %></td>
                                    <td><%= category.parent ? category.parent.name : 'None' %></td>
                                    <td><%= category.description %></td>
                                    <td>
                                        <% if (category.status === 'active') { %>
                                            <span class="alert alert-success py-1 px-2 mb-0">
                                                <i class="bi bi-check-circle me-1"></i><%= category.status %>
                                            </span>
                                        <% } else { %>
                                            <span class="alert alert-warning py-1 px-2 mb-0">
                                                <i class="bi bi-x-circle me-1"></i><%= category.status %>
                                            </span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <a href="/admin/categories/<%= category._id %>/edit" class="action-icon edit" title="Edit Categories">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form action="/admin/categories/<%= category._id %>/delete" method="POST" class="d-inline">
                                            <button type="submit" class="action-icon delete" title="Delete Product" onclick="return confirm('Are you sure you want to delete this product?')">
                                                <i class="bi bi-trash3"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="text-center">No categories found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create Category Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <%- include('partials/categoryForm') %>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm" method="POST">
                    <input type="hidden" name="_method" value="PATCH">
                    <input type="hidden" name="id">
                    <div class="mb-3">
                        <label class="form-label">Category Name</label>
                        <input type="text" class="form-control" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Parent Category</label>
                        <select class="form-select" name="parent">
                            <option value="">None</option>
                            <!-- Parent categories will be dynamically populated -->
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select" name="status" required>
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Update Category</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    loadCategories();
});

async function loadCategories() {
    try {
        const response = await fetch('/admin/categories');
        const html = await response.text();
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        
        // Get the category list from the response
        const categoryList = doc.querySelector('#categoryList');
        if (categoryList) {
            document.getElementById('categoryList').innerHTML = categoryList.innerHTML;
        }
        
        // Get the category options for the parent dropdown
        const parentOptions = doc.querySelector('select[name="parent"]').innerHTML;
        document.querySelector('select[name="parent"]').innerHTML = parentOptions;
    } catch (error) {
        console.error('Error loading categories:', error);
        showToast('Error loading categories', 'error');
    }
}

// Form submission handlers
document.getElementById('createCategoryForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    
    try {
        const response = await fetch('/admin/categories/create', {
            method: 'POST',
            body: formData
        });
        
        if (response.ok) {
            bootstrap.Modal.getInstance(document.getElementById('createCategoryModal')).hide();
            loadCategories();
            showToast('Category created successfully', 'success');
        } else {
            const data = await response.json();
            showToast(data.message || 'Error creating category', 'error');
        }
    } catch (error) {
        console.error('Error creating category:', error);
        showToast('Error creating category', 'error');
    }
});

document.getElementById('editCategoryForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    const categoryId = formData.get('id');
    
    try {
        const response = await fetch(`/admin/categories/${categoryId}`, {
            method: 'POST',
            body: formData
        });
        
        if (response.ok) {
            bootstrap.Modal.getInstance(document.getElementById('editCategoryModal')).hide();
            loadCategories();
            showToast('Category updated successfully', 'success');
        } else {
            const data = await response.json();
            showToast(data.message || 'Error updating category', 'error');
        }
    } catch (error) {
        console.error('Error updating category:', error);
        showToast('Error updating category', 'error');
    }
});

async function editCategory(id) {
    try {
        const response = await fetch(`/admin/categories/${id}/edit`);
        const html = await response.text();
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        
        const form = doc.getElementById('editCategoryForm');
        if (form) {
            document.getElementById('editCategoryForm').innerHTML = form.innerHTML;
            new bootstrap.Modal(document.getElementById('editCategoryModal')).show();
        }
    } catch (error) {
        console.error('Error loading category:', error);
        showToast('Error loading category', 'error');
    }
}

function deleteCategory(id) {
    if (confirm('Are you sure you want to delete this category?')) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/admin/categories/${id}/delete`;
        document.body.appendChild(form);
        form.submit();
    }
}

function showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = `toast ${type} align-items-center text-white border-0`;
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');
    
    toast.innerHTML = `
        <div class="d-flex">
            <div class="toast-body">
                ${message}
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    `;
    
    document.querySelector('.toast-container').appendChild(toast);
    new bootstrap.Toast(toast).show();
    
    toast.addEventListener('hidden.bs.toast', () => {
        toast.remove();
    });
}
</script> 